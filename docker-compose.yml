# [PERSON 2 SPEAKING POINTS]
# Database Configuration and Setup:
# 1. Backend Service
#    - Connects to both MongoDB and MySQL
#    - Environment variables for database connections
#    - Port mapping for API access
services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    depends_on:
      - mongo-db
      - mysql-db
    environment:
      - MONGO_URI=mongodb://mongo-db:27017/workouts
      - MYSQL_HOST=mysql-db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=yourpassword
      - MYSQL_DB=workouts
    networks:
      - app-network

  # 2. MongoDB Configuration
  #    - Latest MongoDB image
  #    - Persistent volume for data
  #    - Network configuration
  mongo-db:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # 3. MySQL Configuration
  #    - Latest MySQL image
  #    - Root password and database setup
  #    - Persistent volume for data
  mysql-db:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: de!ta52C0y0te
      MYSQL_DATABASE: workouts
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

# 4. Network Configuration
#    - Bridge network for service communication
networks:
  app-network:
    driver: bridge

# 5. Volume Configuration
#    - Persistent storage for both databases
volumes:
  mongo-data:
  mysql-data: